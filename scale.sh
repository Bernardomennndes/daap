#!/bin/bash

INSTANCES=${1:-3}
SERVICE=${2:-reviews-service}

if ! [[ "$INSTANCES" =~ ^[0-9]+$ ]] || [ "$INSTANCES" -lt 1 ]; then
    echo "‚ùå N√∫mero de inst√¢ncias deve ser um n√∫mero positivo"
    echo "Uso: ./scale.sh [n√∫mero_de_inst√¢ncias] [servi√ßo]"
    echo "Exemplo: ./scale.sh 5 reviews-service"
    exit 1
fi

echo "üìà Escalando $SERVICE para $INSTANCES inst√¢ncias..."

# Obter n√∫mero atual de inst√¢ncias
current_instances=$(docker-compose ps -q $SERVICE | wc -l | tr -d ' ')
echo "üìä Inst√¢ncias atuais: $current_instances"

if [ "$current_instances" -eq "$INSTANCES" ]; then
    echo "‚ÑπÔ∏è  N√∫mero de inst√¢ncias j√° est√° em $INSTANCES. Nenhuma a√ß√£o necess√°ria."
    exit 0
fi

# Escalar o servi√ßo
docker-compose up -d --scale $SERVICE=$INSTANCES $SERVICE

echo "‚è≥ Aguardando estabiliza√ß√£o (15 segundos)..."
sleep 15

# Verificar health checks
echo "üîç Verificando health do servi√ßo..."
if [ "$SERVICE" = "reviews-service" ]; then
    for i in {1..5}; do
        if curl -f -s "http://reviews.localhost/health" > /dev/null; then
            echo "‚úÖ Reviews service est√° respondendo"
            break
        else
            echo "‚è≥ Aguardando reviews service... ($i/5)"
            sleep 5
        fi
    done
fi

echo ""
echo "üìä Status atual do $SERVICE:"
docker-compose ps $SERVICE

echo ""
echo "üåê Inst√¢ncias ativas:"
docker-compose ps $SERVICE --format "table {{.Name}}\t{{.State}}\t{{.Ports}}"

echo ""
echo "‚úÖ Escalonamento para $INSTANCES inst√¢ncias conclu√≠do!"

# Mostrar distribui√ß√£o de load se for reviews-service
if [ "$SERVICE" = "reviews-service" ]; then
    echo ""
    echo "üîÑ Testando distribui√ß√£o de load (5 requisi√ß√µes):"
    for i in {1..5}; do
        response=$(curl -s "http://reviews.localhost/health" 2>/dev/null)
        if [ $? -eq 0 ]; then
            instance=$(echo "$response" | python3 -c "import sys, json; print(json.load(sys.stdin).get('instance', 'unknown'))" 2>/dev/null || echo "unknown")
            echo "  Requisi√ß√£o $i: Inst√¢ncia $instance"
        else
            echo "  Requisi√ß√£o $i: Falha na conex√£o"
        fi
        sleep 1
    done
fi
