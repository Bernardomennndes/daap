#!/bin/bash

echo "📚 DAAP - Guia de Comandos Rápidos"
echo "=================================="
echo ""

echo "🔍 1. VERIFICAÇÕES INICIAIS"
echo "──────────────────────────"
echo "  ./check-requirements.sh    # Verificar pré-requisitos do sistema"
echo "  ./validate-env.sh          # Validar configuração .env"
echo "  ./setup-info.sh            # Ver resumo da configuração"
echo ""

echo "🚀 2. DEPLOY E GERENCIAMENTO"
echo "────────────────────────────"
echo "  ./deploy.sh                # Deploy com 3 instâncias (padrão)"
echo "  ./deploy.sh 5              # Deploy com 5 instâncias específicas"
echo "  ./scale.sh 8               # Escalar para 8 instâncias"
echo "  ./scale.sh 2               # Reduzir para 2 instâncias"
echo ""

echo "📊 3. MONITORAMENTO"
echo "───────────────────"
echo "  ./monitor.sh               # Status completo do sistema"
echo "  ./logs.sh                  # Logs de todos os serviços"
echo "  ./logs.sh reviews          # Logs apenas do reviews-service"
echo "  ./logs.sh cache            # Logs apenas do cache-service"
echo "  ./logs.sh traefik          # Logs do load balancer"
echo ""

echo "🧪 4. TESTES"
echo "────────────"
echo "  ./load-test.sh             # Teste básico (100 req, 10 concurrent)"
echo "  ./load-test.sh 500 20      # Teste intenso (500 req, 20 concurrent)"
echo "  curl http://reviews.localhost/health  # Testar health check"
echo ""

echo "🔧 5. DOCKER COMPOSE"
echo "────────────────────"
echo "  docker-compose up -d       # Iniciar serviços"
echo "  docker-compose down        # Parar serviços"
echo "  docker-compose ps          # Ver status dos containers"
echo "  docker-compose logs -f     # Ver logs em tempo real"
echo ""

echo "🌐 6. URLS IMPORTANTES"
echo "──────────────────────"
echo "  http://daap.localhost           # Interface web principal"
echo "  http://reviews.localhost        # API de reviews (load balanced)"
echo "  http://cache.localhost          # API de cache"
echo "  http://search.localhost         # API de busca"
echo "  http://localhost:8080           # Dashboard do Traefik"
echo ""

echo "🏥 7. HEALTH CHECKS"
echo "───────────────────"
echo "  curl http://reviews.localhost/health   # Status do reviews-service"
echo "  curl http://cache.localhost/health     # Status do cache-service"
echo "  curl http://search.localhost/health    # Status do search-service"
echo ""

echo "🔄 8. COMANDOS DE DESENVOLVIMENTO"
echo "─────────────────────────────────"
echo "  pnpm install               # Instalar dependências"
echo "  pnpm run dev               # Modo desenvolvimento"
echo "  pnpm run build             # Build dos projetos"
echo ""

echo "📁 9. CONFIGURAÇÃO"
echo "──────────────────"
echo "  cp .env.example .env       # Criar arquivo de configuração"
echo "  nano .env                  # Editar configurações"
echo "  sudo sh -c 'cat hosts-local.txt >> /etc/hosts'  # Configurar hosts"
echo ""

echo "🆘 10. TROUBLESHOOTING"
echo "──────────────────────"
echo "  docker system prune -f    # Limpar containers órfãos"
echo "  docker-compose down -v    # Parar e remover volumes"
echo "  docker-compose build --no-cache  # Rebuild sem cache"
echo "  docker ps -a               # Ver todos os containers"
echo "  docker logs CONTAINER_NAME # Ver logs de container específico"
echo ""

echo "📚 11. DOCUMENTAÇÃO"
echo "───────────────────"
echo "  cat README.md              # Documentação principal"
echo "  cat ENV_GUIDE.md           # Guia de variáveis de ambiente"
echo "  cat IMPLEMENTATION_SUMMARY.md  # Resumo da implementação"
echo ""

echo "💡 DICAS IMPORTANTES:"
echo "════════════════════"
echo "  • Sempre execute ./validate-env.sh antes do deploy"
echo "  • Use ./monitor.sh para acompanhar o sistema"
echo "  • Em caso de problemas, verifique ./logs.sh"
echo "  • Para produção, altere as configurações no .env"
echo "  • O Traefik dashboard mostra métricas em tempo real"
echo ""

echo "🎯 WORKFLOW RECOMENDADO:"
echo "═══════════════════════"
echo "  1. ./check-requirements.sh"
echo "  2. ./validate-env.sh" 
echo "  3. sudo sh -c 'cat hosts-local.txt >> /etc/hosts'"
echo "  4. ./deploy.sh 3"
echo "  5. ./monitor.sh"
echo "  6. Acessar http://daap.localhost"
